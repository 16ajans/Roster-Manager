// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Division {
  id           String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  open         Boolean
  min_players  Int?
  max_players  Int?
  name         String  @unique
  description  String?
  manager_role String?
  player_role  String?
  adminId      String  @db.Uuid
  admin        User    @relation(fields: [adminId], references: [id])
  Team         Team[]
}

model Team {
  id         String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  division   Division     @relation(fields: [divisionId], references: [id])
  manager    User         @relation(fields: [managerId], references: [id])
  name       String       @unique
  locale     String?
  divisionId String       @db.Uuid
  managerId  String       @db.Uuid
  Assignment Assignment[]
}

model Assignment {
  id         String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  player     Player  @relation(fields: [playerId], references: [id])
  team       Team    @relation(fields: [teamId], references: [id])
  alt_tag    String?
  scoresaber String?
  status     State   @default(REVIEW)
  playerId   String  @db.Uuid
  teamId     String  @db.Uuid
}

model Player {
  id         String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  manager    User         @relation(fields: [managerId], references: [id])
  name       String       @unique
  school     String
  discord    String       @unique
  status     State        @default(AWAITING)
  Assignment Assignment[]
  managerId  String       @db.Uuid
}

model User {
  id       String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  discord  String     @unique
  avatar   String?
  auth     String?
  Division Division[]
  Team     Team[]
  Player   Player[]
}

enum State {
  REJECTED
  AWAITING
  REVIEW
  ACCEPTED
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}
